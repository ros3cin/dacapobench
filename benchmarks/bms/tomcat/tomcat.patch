diff -ur apache-tomcat-6.0.20-src/build.properties.default apache-tomcat-6.0.20-src-modified/build.properties.default
--- apache-tomcat-6.0.20-src/build.properties.default	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/build.properties.default	2018-03-10 22:07:09.877159161 -0300
@@ -45,7 +45,7 @@
 
 base-commons.loc=http://archive.apache.org/dist/commons
 base-tomcat.loc=http://archive.apache.org/dist/tomcat
-base-sf.loc=http://downloads.sourceforge.net
+base-sf.loc=http://ufpr.dl.sourceforge.net
 
 # ----- Commons Logging, version 1.1 or later -----
 commons-logging-version=1.1.1
@@ -59,7 +59,7 @@
 jdt.home=${base.path}/eclipse/plugins
 jdt.lib=${jdt.home}
 jdt.jar=${jdt.lib}/org.eclipse.jdt.core_3.3.1.v_780_R33x.jar
-jdt.loc=http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.3.1-200709211145/eclipse-JDT-3.3.1.zip
+jdt.loc=http://archive.eclipse.org/eclipse/downloads/drops/R-3.3.1-200709211145/eclipse-JDT-3.3.1.zip
 
 # ----- Tomcat native library -----
 tomcat-native.version=1.1.16
@@ -90,7 +90,7 @@
 nsis.installoptions.dll=${nsis.home}/Plugins/InstallOptions.dll
 nsis.nsexec.dll=${nsis.home}/Plugins/nsExec.dll
 nsis.nsisdl.dll=${nsis.home}/Plugins/NSISdl.dll
-nsis.loc=${base-sf.loc}/nsis/nsis-2.37.zip
+nsis.loc=${base-sf.loc}/project/nsis/NSIS%202/2.37/nsis-2.37.zip
 
 # ----- Commons Daemon, version 1.0-Alpha or later -----
 commons-daemon.home=${base.path}/commons-daemon-1.0.1
diff -ur apache-tomcat-6.0.20-src/build.xml apache-tomcat-6.0.20-src-modified/build.xml
--- apache-tomcat-6.0.20-src/build.xml	2009-05-13 20:15:28.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/build.xml	2018-03-22 01:55:06.077924154 -0300
@@ -78,6 +78,12 @@
   <property name="jasper-jdt.home" value="${base.path}/tomcat6-deps/jdt" />
   <property name="tomcat-dbcp.jar" value="${tomcat-dbcp.home}/tomcat-dbcp.jar"/>
   <property name="jasper-jdt.jar" value="${jasper-jdt.home}/jasper-jdt.jar"/>
+  
+  <property name="external-lib-path" value="${base.path}/external-libs" />
+  <property name="eclipse-collections-impl-jar" value="${external-lib-path}/eclipse-collections-9.1.0.jar" />
+  <property name="eclipse-collections-api-jar" value="${external-lib-path}/eclipse-collections-api-9.1.0.jar" />
+  <property name="jsr166e-jar" value="${external-lib-path}/jsr166e-1.0.jar" />
+
   <available property="tomcat-dbcp.present" file="${tomcat-dbcp.jar}" />
   <available property="jdk16.present" classname="javax.sql.StatementEvent" />
 
@@ -85,6 +91,9 @@
   <path id="tomcat.classpath">
     <pathelement location="${ant.jar}"/>
     <pathelement location="${jdt.jar}"/>
+    <pathelement location="${eclipse-collections-impl-jar}"/>
+    <pathelement location="${eclipse-collections-api-jar}"/>
+    <pathelement location="${jsr166e-jar}"/>
   </path>
 
   <!-- Just build Tomcat -->
@@ -243,6 +252,22 @@
         </jar>
     </sequential>
   </macrodef>
+
+  <macrodef name="jarItWithManifest" description="utility macro for standard JAR packaging">
+    <attribute name="jarfile" description="the name of the JAR file to create"/>
+    <attribute name="filesId" description="the patternset id of the files to use"/>
+    <attribute name="manifestFile" description="the manifest file to use"/>
+    <sequential>
+        <jar  jarfile="@{jarfile}" manifest="@{manifestFile}">
+          <fileset dir="${tomcat.classes}">
+            <patternset refid="@{filesId}"/>
+            <!-- Javadoc and i18n exclusions -->
+            <exclude name="**/package.html" />
+            <exclude name="**/LocalStrings_*" />
+          </fileset>
+        </jar>
+    </sequential>
+  </macrodef>
   
   <target name="package" >
     <!-- Common filtering tokens for JAR manifests-->
@@ -310,7 +335,7 @@
     <jarIt jarfile="${tomcat-juli.jar}" filesId="files.tomcat-juli"/>
 
     <!-- Catalina Main JAR File -->
-    <jarIt jarfile="${catalina.jar}" filesId="files.catalina"/>
+    <jarItWithManifest jarfile="${catalina.jar}" filesId="files.catalina" manifestFile="res/CATALINA-MANIFEST.MF"/>
 
     <!-- Catalina GroupCom/Tribes JAR File -->
     <jarIt jarfile="${catalina-tribes.jar}" filesId="files.catalina-tribes"/>
Only in apache-tomcat-6.0.20-src-modified/: external-libs
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/connector/Request.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/connector/Request.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/connector/Request.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/connector/Request.java	2018-03-22 02:52:24.594186670 -0300
@@ -33,6 +33,8 @@
 import java.util.Map;
 import java.util.TimeZone;
 import java.util.TreeMap;
+import java.util.WeakHashMap;
+import java.util.concurrent.ConcurrentHashMap;
 
 import javax.security.auth.Subject;
 import javax.servlet.FilterChain;
@@ -188,7 +190,7 @@
      * Internal notes associated with this request by Catalina components
      * and event listeners.
      */
-    private transient HashMap notes = new HashMap();
+    private transient ConcurrentHashMap notes = new ConcurrentHashMap();
 
 
     /**
@@ -2551,7 +2553,7 @@
         // a local collection, sorted by the quality value (so we can
         // add Locales in descending order).  The values will be ArrayLists
         // containing the corresponding Locales to be added
-        TreeMap locales = new TreeMap();
+        HashMap locales = new HashMap();
 
         // Preprocess the value to remove all whitespace
         int white = value.indexOf(' ');
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/core/ApplicationContext.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/core/ApplicationContext.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/core/ApplicationContext.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/core/ApplicationContext.java	2018-03-12 23:57:31.779413017 -0300
@@ -29,6 +29,8 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.Collections;
+import java.util.HashMap;
 
 import javax.naming.Binding;
 import javax.naming.NamingException;
@@ -871,7 +873,7 @@
 
         if (parameters != null)
             return;
-        Map results = new ConcurrentHashMap();
+        Map results = Collections.synchronizedMap(new HashMap());
         String names[] = context.findParameters();
         for (int i = 0; i < names.length; i++)
             results.put(names[i], context.findParameter(names[i]));
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/core/StandardContext.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/core/StandardContext.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/core/StandardContext.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/core/StandardContext.java	2018-03-13 00:07:26.974904122 -0300
@@ -33,6 +33,7 @@
 import java.util.Iterator;
 import java.util.Stack;
 import java.util.TreeMap;
+import java.util.WeakHashMap;
 
 import javax.management.AttributeNotFoundException;
 import javax.management.ListenerNotFoundException;
@@ -344,7 +345,7 @@
      * The exception pages for this web application, keyed by fully qualified
      * class name of the Java exception.
      */
-    private HashMap exceptionPages = new HashMap();
+    private WeakHashMap exceptionPages = new WeakHashMap();
 
 
     /**
@@ -413,13 +414,13 @@
     /**
      * The message destinations for this web application.
      */
-    private HashMap messageDestinations = new HashMap();
+    private WeakHashMap messageDestinations = new WeakHashMap();
 
 
     /**
      * The MIME mappings for this web application, keyed by extension.
      */
-    private HashMap mimeMappings = new HashMap();
+    private WeakHashMap mimeMappings = new WeakHashMap();
 
 
      /**
@@ -493,7 +494,7 @@
      * The security role mappings for this application, keyed by role
      * name (as used within the application).
      */
-    private HashMap roleMappings = new HashMap();
+    private WeakHashMap roleMappings = new WeakHashMap();
 
 
     /**
@@ -508,7 +509,7 @@
      * The servlet mappings for this web application, keyed by
      * matching pattern.
      */
-    private HashMap servletMappings = new HashMap();
+    private WeakHashMap servletMappings = new WeakHashMap();
     
     private final Object servletMappingsLock = new Object();
 
@@ -527,7 +528,7 @@
      * The status code error pages for this web application, keyed by
      * HTTP status code (as an Integer).
      */
-    private HashMap statusPages = new HashMap();
+    private WeakHashMap statusPages = new WeakHashMap();
 
 
     /**
@@ -540,7 +541,7 @@
     /**
      * The JSP tag libraries for this web application, keyed by URI
      */
-    private HashMap taglibs = new HashMap();
+    private WeakHashMap taglibs = new WeakHashMap();
 
 
     /**
@@ -4122,7 +4123,7 @@
     public void loadOnStartup(Container children[]) {
 
         // Collect "load on startup" servlets that need to be initialized
-        TreeMap map = new TreeMap();
+        HashMap map = new HashMap();
         for (int i = 0; i < children.length; i++) {
             Wrapper wrapper = (Wrapper) children[i];
             int loadOnStartup = wrapper.getLoadOnStartup();
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/ContextTransaction.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/ContextTransaction.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/ContextTransaction.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/ContextTransaction.java	2018-03-13 00:09:31.247841123 -0300
@@ -21,6 +21,7 @@
 import java.io.Serializable;
 import java.util.HashMap;
 import java.util.Iterator;
+import java.util.WeakHashMap;
 
 
 /**
@@ -40,7 +41,7 @@
     /**
      * Holder for our configured properties.
      */
-    private HashMap properties = new HashMap();
+    private WeakHashMap properties = new WeakHashMap();
 
     /**
      * Return a configured property.
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/NamingResources.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/NamingResources.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/NamingResources.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/NamingResources.java	2018-03-13 00:16:59.703495722 -0300
@@ -22,8 +22,11 @@
 import java.beans.PropertyChangeListener;
 import java.beans.PropertyChangeSupport;
 import java.util.HashMap;
+import java.util.Map;
+import java.util.WeakHashMap;
 import java.util.Hashtable;
 import java.io.Serializable;
+import java.util.Collections;
 
 import org.apache.catalina.ServerFactory;
 
@@ -62,58 +65,58 @@
      * List of naming entries, keyed by name. The value is the entry type, as
      * declared by the user.
      */
-    private Hashtable entries = new Hashtable();
+    private Map entries = Collections.synchronizedMap(new WeakHashMap());
 
 
     /**
      * The EJB resource references for this web application, keyed by name.
      */
-    private HashMap ejbs = new HashMap();
+    private WeakHashMap ejbs = new WeakHashMap();
 
 
     /**
      * The environment entries for this web application, keyed by name.
      */
-    private HashMap envs = new HashMap();
+    private WeakHashMap envs = new WeakHashMap();
 
 
     /**
      * The local  EJB resource references for this web application, keyed by
      * name.
      */
-    private HashMap localEjbs = new HashMap();
+    private WeakHashMap localEjbs = new WeakHashMap();
 
 
     /**
      * The message destination referencess for this web application,
      * keyed by name.
      */
-    private HashMap mdrs = new HashMap();
+    private WeakHashMap mdrs = new WeakHashMap();
 
 
     /**
      * The resource environment references for this web application,
      * keyed by name.
      */
-    private HashMap resourceEnvRefs = new HashMap();
+    private WeakHashMap resourceEnvRefs = new WeakHashMap();
 
 
     /**
      * The resource references for this web application, keyed by name.
      */
-    private HashMap resources = new HashMap();
+    private WeakHashMap resources = new WeakHashMap();
 
 
     /**
      * The resource links for this web application, keyed by name.
      */
-    private HashMap resourceLinks = new HashMap();
+    private WeakHashMap resourceLinks = new WeakHashMap();
 
 
     /**
      * The web service references for this web application, keyed by name.
      */
-    private HashMap services = new HashMap();
+    private WeakHashMap services = new WeakHashMap();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/ResourceBase.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/ResourceBase.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/ResourceBase.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/ResourceBase.java	2018-03-13 00:19:42.856891377 -0300
@@ -21,6 +21,7 @@
 import java.io.Serializable;
 import java.util.Iterator;
 import java.util.HashMap;
+import java.util.WeakHashMap;
 
 
 /**
@@ -82,7 +83,7 @@
     /**
      * Holder for our configured properties.
      */
-    private HashMap properties = new HashMap();
+    private WeakHashMap properties = new WeakHashMap();
 
     /**
      * Return a configured property.
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/security/SecurityUtil.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/security/SecurityUtil.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/security/SecurityUtil.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/security/SecurityUtil.java	2018-03-13 00:21:37.725886819 -0300
@@ -24,6 +24,7 @@
 import java.security.PrivilegedActionException;
 import java.security.PrivilegedExceptionAction;
 import java.util.HashMap;
+import java.util.WeakHashMap;
 
 import javax.security.auth.Subject;
 import javax.servlet.Filter;
@@ -62,7 +63,7 @@
     /**
      * Cache every object for which we are creating method on it.
      */
-    private static HashMap objectCache = new HashMap();
+    private static WeakHashMap objectCache = new WeakHashMap();
         
     private static org.apache.juli.logging.Log log=
         org.apache.juli.logging.LogFactory.getLog( SecurityUtil.class );
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/ssi/ExpressionParseTree.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/ssi/ExpressionParseTree.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/ssi/ExpressionParseTree.java	2009-05-13 20:15:29.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/ssi/ExpressionParseTree.java	2018-03-13 00:28:31.519668443 -0300
@@ -20,6 +20,7 @@
 import java.text.ParseException;
 import java.util.LinkedList;
 import java.util.List;
+import java.util.ArrayList;
 /**
  * Represents a parsed expression.
  * 
@@ -36,7 +37,7 @@
      * Contains operator nodes that don't yet have values. This is a workspace
      * for the parser.
      */
-    private LinkedList oppStack = new LinkedList();
+    private ArrayList oppStack = new ArrayList();
     /**
      * The root node after the expression has been parsed.
      */
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/HomesUserDatabase.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/HomesUserDatabase.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/HomesUserDatabase.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/HomesUserDatabase.java	2018-03-13 00:32:01.202961291 -0300
@@ -21,6 +21,7 @@
 
 import java.io.File;
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.Enumeration;
 
 
@@ -56,7 +57,7 @@
     /**
      * The set of home directories for all defined users, keyed by username.
      */
-    private Hashtable homes = new Hashtable();
+    private ConcurrentHashMap homes = new ConcurrentHashMap();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/PasswdUserDatabase.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/PasswdUserDatabase.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/PasswdUserDatabase.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/PasswdUserDatabase.java	2018-03-13 00:34:26.433009410 -0300
@@ -23,6 +23,7 @@
 import java.io.FileReader;
 import java.io.IOException;
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.Enumeration;
 
 
@@ -63,7 +64,7 @@
     /**
      * The set of home directories for all defined users, keyed by username.
      */
-    private Hashtable homes = new Hashtable();
+    private ConcurrentHashMap homes = new ConcurrentHashMap();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/TldConfig.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/TldConfig.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/TldConfig.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/TldConfig.java	2018-03-13 00:35:31.193876333 -0300
@@ -39,6 +39,7 @@
 import java.util.StringTokenizer;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
+import java.util.WeakHashMap;
 
 import javax.naming.NameClassPair;
 import javax.naming.NamingEnumeration;
@@ -663,7 +664,7 @@
      */
     private Map getJarPaths() {
 
-        HashMap jarPathMap = null;
+        WeakHashMap jarPathMap = null;
 
         ClassLoader webappLoader = Thread.currentThread().getContextClassLoader();
         ClassLoader loader = webappLoader;
@@ -709,7 +710,7 @@
                             || noTldJars == null
                             || !noTldJars.contains(file.getName())) {
                         if (jarPathMap == null) {
-                            jarPathMap = new HashMap();
+                            jarPathMap = new WeakHashMap();
                             jarPathMap.put(path, file);
                         } else if (!jarPathMap.containsKey(path)) {
                             jarPathMap.put(path, file);
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/util/MIME2Java.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/MIME2Java.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/util/MIME2Java.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/MIME2Java.java	2018-03-13 00:36:37.670741439 -0300
@@ -18,6 +18,7 @@
 package org.apache.catalina.util;
 
 import java.util.*;
+import java.util.concurrent.ConcurrentHashMap;
 
 /**
  * MIME2Java is a convenience class which handles conversions between MIME charset names
@@ -471,11 +472,11 @@
  */
 public class MIME2Java {
 
-    static private Hashtable s_enchash;
-    static private Hashtable s_revhash;
+    static private ConcurrentHashMap s_enchash;
+    static private ConcurrentHashMap s_revhash;
 
     static {
-        s_enchash = new Hashtable();
+        s_enchash = new ConcurrentHashMap();
         //    <preferred MIME name>, <Java encoding name>
         s_enchash.put("UTF-8", "UTF8");
         s_enchash.put("US-ASCII",        "8859_1");    // ?
@@ -519,7 +520,7 @@
                                                 // j:CNS11643 -> EUC-TW?
                                                 // ISO-2022-CN? ISO-2022-CN-EXT?
 
-        s_revhash = new Hashtable();
+        s_revhash = new ConcurrentHashMap();
         //    <Java encoding name>, <preferred MIME name>
         s_revhash.put("UTF8", "UTF-8");
         //s_revhash.put("8859_1", "US-ASCII");    // ?
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/util/StringManager.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/StringManager.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/util/StringManager.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/StringManager.java	2018-03-13 00:37:59.439775563 -0300
@@ -20,6 +20,7 @@
 
 import java.text.MessageFormat;
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.Locale;
 import java.util.MissingResourceException;
 import java.util.ResourceBundle;
@@ -231,7 +232,7 @@
     // STATIC SUPPORT METHODS
     // --------------------------------------------------------------
 
-    private static Hashtable managers = new Hashtable();
+    private static ConcurrentHashMap managers = new ConcurrentHashMap();
 
     /**
      * Get the StringManager for a particular package. If a manager for
Only in apache-tomcat-6.0.20-src-modified/: output
Only in apache-tomcat-6.0.20-src-modified/res: CATALINA-MANIFEST.MF
