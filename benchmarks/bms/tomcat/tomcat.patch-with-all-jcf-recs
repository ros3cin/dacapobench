diff -ur apache-tomcat-6.0.20-src/build.properties.default apache-tomcat-6.0.20-src-modified/build.properties.default
--- apache-tomcat-6.0.20-src/build.properties.default	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/build.properties.default	2018-06-21 21:22:53.601979000 -0300
@@ -45,7 +45,7 @@
 
 base-commons.loc=http://archive.apache.org/dist/commons
 base-tomcat.loc=http://archive.apache.org/dist/tomcat
-base-sf.loc=http://downloads.sourceforge.net
+base-sf.loc=http://master.dl.sourceforge.net
 
 # ----- Commons Logging, version 1.1 or later -----
 commons-logging-version=1.1.1
@@ -59,7 +59,7 @@
 jdt.home=${base.path}/eclipse/plugins
 jdt.lib=${jdt.home}
 jdt.jar=${jdt.lib}/org.eclipse.jdt.core_3.3.1.v_780_R33x.jar
-jdt.loc=http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops/R-3.3.1-200709211145/eclipse-JDT-3.3.1.zip
+jdt.loc=http://archive.eclipse.org/eclipse/downloads/drops/R-3.3.1-200709211145/eclipse-JDT-3.3.1.zip
 
 # ----- Tomcat native library -----
 tomcat-native.version=1.1.16
@@ -90,7 +90,7 @@
 nsis.installoptions.dll=${nsis.home}/Plugins/InstallOptions.dll
 nsis.nsexec.dll=${nsis.home}/Plugins/nsExec.dll
 nsis.nsisdl.dll=${nsis.home}/Plugins/NSISdl.dll
-nsis.loc=${base-sf.loc}/nsis/nsis-2.37.zip
+nsis.loc=${base-sf.loc}/project/nsis/NSIS%202/2.37/nsis-2.37.zip
 
 # ----- Commons Daemon, version 1.0-Alpha or later -----
 commons-daemon.home=${base.path}/commons-daemon-1.0.1
Only in apache-tomcat-6.0.20-src-modified: build.properties.default.orig
diff -ur apache-tomcat-6.0.20-src/build.xml apache-tomcat-6.0.20-src-modified/build.xml
--- apache-tomcat-6.0.20-src/build.xml	2009-05-13 20:15:28.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/build.xml	2018-06-22 01:05:41.186183127 -0300
@@ -78,11 +78,17 @@
   <property name="jasper-jdt.home" value="${base.path}/tomcat6-deps/jdt" />
   <property name="tomcat-dbcp.jar" value="${tomcat-dbcp.home}/tomcat-dbcp.jar"/>
   <property name="jasper-jdt.jar" value="${jasper-jdt.home}/jasper-jdt.jar"/>
+
+  <property name="external-lib-path" value="${base.path}/external-libs" />
+  <property name="apache-commons-collections-jar" value="${external-lib-path}/commons-collections4-4.1.jar" />
+
   <available property="tomcat-dbcp.present" file="${tomcat-dbcp.jar}" />
   <available property="jdk16.present" classname="javax.sql.StatementEvent" />
+  
 
   <!-- Classpath -->
   <path id="tomcat.classpath">
+    <pathelement location="${apache-commons-collections-jar}"/>
     <pathelement location="${ant.jar}"/>
     <pathelement location="${jdt.jar}"/>
   </path>
@@ -243,6 +249,22 @@
         </jar>
     </sequential>
   </macrodef>
+
+  <macrodef name="jarItWithManifest" description="utility macro for standard JAR packaging">
+    <attribute name="jarfile" description="the name of the JAR file to create"/>
+    <attribute name="filesId" description="the patternset id of the files to use"/>
+    <attribute name="manifestFile" description="the manifest file to use"/>
+    <sequential>
+        <jar  jarfile="@{jarfile}" manifest="@{manifestFile}">
+          <fileset dir="${tomcat.classes}">
+            <patternset refid="@{filesId}"/>
+            <!-- Javadoc and i18n exclusions -->
+            <exclude name="**/package.html" />
+            <exclude name="**/LocalStrings_*" />
+          </fileset>
+        </jar>
+    </sequential>
+  </macrodef>
   
   <target name="package" >
     <!-- Common filtering tokens for JAR manifests-->
@@ -310,7 +332,7 @@
     <jarIt jarfile="${tomcat-juli.jar}" filesId="files.tomcat-juli"/>
 
     <!-- Catalina Main JAR File -->
-    <jarIt jarfile="${catalina.jar}" filesId="files.catalina"/>
+    <jarItWithManifest jarfile="${catalina.jar}" filesId="files.catalina" manifestFile="res/CATALINA-MANIFEST.MF"/>
 
     <!-- Catalina GroupCom/Tribes JAR File -->
     <jarIt jarfile="${catalina-tribes.jar}" filesId="files.catalina-tribes"/>
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/core/StandardEngine.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/core/StandardEngine.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/core/StandardEngine.java	2018-06-22 01:15:57.439690564 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/core/StandardEngine.java	2018-06-22 01:36:18.998427679 -0300
@@ -38,6 +38,7 @@
 import org.apache.juli.logging.LogFactory;
 import org.apache.tomcat.util.modeler.Registry;
 import org.apache.tomcat.util.modeler.modules.MbeansSource;
+//import org.apache.commons.collections4.map.HashedMap;
 
 /**
  * Standard implementation of the <b>Engine</b> interface.  Each
@@ -54,6 +55,7 @@
     implements Engine {
 
     private static Log log = LogFactory.getLog(StandardEngine.class);
+    //private HashedMap myMap = new HashedMap();
 
     // ----------------------------------------------------------- Constructors
 
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/NamingResources.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/NamingResources.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/deploy/NamingResources.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/deploy/NamingResources.java	2018-06-22 01:22:14.174920232 -0300
@@ -23,6 +23,7 @@
 import java.beans.PropertyChangeSupport;
 import java.util.HashMap;
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 import java.io.Serializable;
 
 import org.apache.catalina.ServerFactory;
@@ -62,7 +63,7 @@
      * List of naming entries, keyed by name. The value is the entry type, as
      * declared by the user.
      */
-    private Hashtable entries = new Hashtable();
+    private ConcurrentHashMap entries = new ConcurrentHashMap();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/mbeans/MBeanUtils.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/mbeans/MBeanUtils.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/mbeans/MBeanUtils.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/mbeans/MBeanUtils.java	2018-06-22 01:18:06.460803356 -0300
@@ -19,6 +19,7 @@
 
 
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 
 import javax.management.DynamicMBean;
 import javax.management.MBeanException;
@@ -1333,7 +1334,7 @@
 
     }
 
-    static Hashtable seq=new Hashtable();
+    static ConcurrentHashMap seq=new ConcurrentHashMap();
     static int getSeq( String key ) {
         int i[]=(int [])seq.get( key );
         if (i == null ) {
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/realm/CombinedRealm.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/realm/CombinedRealm.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/realm/CombinedRealm.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/realm/CombinedRealm.java	2018-06-21 21:44:34.139523000 -0300
@@ -21,6 +21,7 @@
 
 import java.security.cert.X509Certificate;
 import java.util.LinkedList;
+import java.util.ArrayList;
 import java.util.List;
 
 import javax.management.ObjectName;
@@ -52,7 +53,7 @@
     /**
      * The list of Realms contained by this Realm.
      */
-    protected List<Realm> realms = new LinkedList<Realm>();
+    protected List<Realm> realms = new ArrayList<Realm>();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/HomesUserDatabase.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/HomesUserDatabase.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/HomesUserDatabase.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/HomesUserDatabase.java	2018-06-21 22:07:00.022852000 -0300
@@ -21,6 +21,7 @@
 
 import java.io.File;
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.Enumeration;
 
 
@@ -56,7 +57,7 @@
     /**
      * The set of home directories for all defined users, keyed by username.
      */
-    private Hashtable homes = new Hashtable();
+    private ConcurrentHashMap homes = new ConcurrentHashMap();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/PasswdUserDatabase.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/PasswdUserDatabase.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/startup/PasswdUserDatabase.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/startup/PasswdUserDatabase.java	2018-06-21 22:09:16.664478000 -0300
@@ -23,6 +23,7 @@
 import java.io.FileReader;
 import java.io.IOException;
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.Enumeration;
 
 
@@ -63,7 +64,7 @@
     /**
      * The set of home directories for all defined users, keyed by username.
      */
-    private Hashtable homes = new Hashtable();
+    private ConcurrentHashMap homes = new ConcurrentHashMap();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/util/MIME2Java.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/MIME2Java.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/util/MIME2Java.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/MIME2Java.java	2018-06-21 22:10:46.781555000 -0300
@@ -18,6 +18,7 @@
 package org.apache.catalina.util;
 
 import java.util.*;
+import java.util.concurrent.ConcurrentHashMap;
 
 /**
  * MIME2Java is a convenience class which handles conversions between MIME charset names
@@ -471,11 +472,11 @@
  */
 public class MIME2Java {
 
-    static private Hashtable s_enchash;
-    static private Hashtable s_revhash;
+    static private ConcurrentHashMap s_enchash;
+    static private ConcurrentHashMap s_revhash;
 
     static {
-        s_enchash = new Hashtable();
+        s_enchash = new ConcurrentHashMap();
         //    <preferred MIME name>, <Java encoding name>
         s_enchash.put("UTF-8", "UTF8");
         s_enchash.put("US-ASCII",        "8859_1");    // ?
@@ -519,7 +520,7 @@
                                                 // j:CNS11643 -> EUC-TW?
                                                 // ISO-2022-CN? ISO-2022-CN-EXT?
 
-        s_revhash = new Hashtable();
+        s_revhash = new ConcurrentHashMap();
         //    <Java encoding name>, <preferred MIME name>
         s_revhash.put("UTF8", "UTF-8");
         //s_revhash.put("8859_1", "US-ASCII");    // ?
diff -ur apache-tomcat-6.0.20-src/java/org/apache/catalina/util/StringManager.java apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/StringManager.java
--- apache-tomcat-6.0.20-src/java/org/apache/catalina/util/StringManager.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/catalina/util/StringManager.java	2018-06-22 01:20:44.082152793 -0300
@@ -24,6 +24,7 @@
 import java.util.MissingResourceException;
 import java.util.ResourceBundle;
 import java.net.URLClassLoader;
+import java.util.concurrent.ConcurrentHashMap;
 
 /**
  * An internationalization / localization helper class which reduces
@@ -231,7 +232,7 @@
     // STATIC SUPPORT METHODS
     // --------------------------------------------------------------
 
-    private static Hashtable managers = new Hashtable();
+    private static ConcurrentHashMap managers = new ConcurrentHashMap();
 
     /**
      * Get the StringManager for a particular package. If a manager for
diff -ur apache-tomcat-6.0.20-src/java/org/apache/naming/ContextAccessController.java apache-tomcat-6.0.20-src-modified/java/org/apache/naming/ContextAccessController.java
--- apache-tomcat-6.0.20-src/java/org/apache/naming/ContextAccessController.java	2009-05-13 20:15:14.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/naming/ContextAccessController.java	2018-06-21 22:14:32.666191000 -0300
@@ -18,7 +18,10 @@
 
 package org.apache.naming;
 
+import java.util.Collections;
 import java.util.Hashtable;
+import java.util.LinkedHashMap;
+import java.util.Map;
 
 /**
  * Handles the access control on the JNDI contexts.
@@ -36,13 +39,13 @@
     /**
      * Catalina context names on which writing is not allowed.
      */
-    private static Hashtable readOnlyContexts = new Hashtable();
+    private static Map readOnlyContexts = Collections.synchronizedMap(new LinkedHashMap());
 
 
     /**
      * Security tokens repository.
      */
-    private static Hashtable securityTokens = new Hashtable();
+    private static Map securityTokens = Collections.synchronizedMap(new LinkedHashMap());
 
 
     // --------------------------------------------------------- Public Methods
diff -ur apache-tomcat-6.0.20-src/java/org/apache/naming/ContextBindings.java apache-tomcat-6.0.20-src-modified/java/org/apache/naming/ContextBindings.java
--- apache-tomcat-6.0.20-src/java/org/apache/naming/ContextBindings.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/naming/ContextBindings.java	2018-06-21 22:17:37.751237000 -0300
@@ -18,7 +18,12 @@
 
 package org.apache.naming;
 
+import java.util.Collections;
 import java.util.Hashtable;
+import java.util.LinkedHashMap;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
 import javax.naming.NamingException;
 import javax.naming.Context;
 
@@ -42,31 +47,31 @@
     /**
      * Bindings name - naming context. Keyed by name.
      */
-    private static Hashtable contextNameBindings = new Hashtable();
+    private static ConcurrentHashMap contextNameBindings = new ConcurrentHashMap();
 
 
     /**
      * Bindings thread - naming context. Keyed by thread id.
      */
-    private static Hashtable threadBindings = new Hashtable();
+    private static Map threadBindings = Collections.synchronizedMap(new LinkedHashMap());
 
 
     /**
      * Bindings thread - name. Keyed by thread id.
      */
-    private static Hashtable threadNameBindings = new Hashtable();
+    private static Map threadNameBindings = Collections.synchronizedMap(new LinkedHashMap());
 
 
     /**
      * Bindings class loader - naming context. Keyed by CL id.
      */
-    private static Hashtable clBindings = new Hashtable();
+    private static ConcurrentHashMap clBindings = new ConcurrentHashMap();
 
 
     /**
      * Bindings class loader - name. Keyed by CL id.
      */
-    private static Hashtable clNameBindings = new Hashtable();
+    private static ConcurrentHashMap clNameBindings = new ConcurrentHashMap();
 
 
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/naming/resources/DirContextURLStreamHandler.java apache-tomcat-6.0.20-src-modified/java/org/apache/naming/resources/DirContextURLStreamHandler.java
--- apache-tomcat-6.0.20-src/java/org/apache/naming/resources/DirContextURLStreamHandler.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/naming/resources/DirContextURLStreamHandler.java	2018-06-21 22:20:28.844491000 -0300
@@ -22,6 +22,7 @@
 import java.net.URLConnection;
 import java.net.URLStreamHandler;
 import java.util.Hashtable;
+import java.util.concurrent.ConcurrentHashMap;
 
 import javax.naming.directory.DirContext;
 
@@ -53,7 +54,7 @@
     /**
      * Bindings class loader - directory context. Keyed by CL id.
      */
-    private static Hashtable clBindings = new Hashtable();
+    private static ConcurrentHashMap clBindings = new ConcurrentHashMap();
     
     
     /**
diff -ur apache-tomcat-6.0.20-src/java/org/apache/naming/ServiceRef.java apache-tomcat-6.0.20-src-modified/java/org/apache/naming/ServiceRef.java
--- apache-tomcat-6.0.20-src/java/org/apache/naming/ServiceRef.java	2009-05-13 20:15:15.000000000 -0300
+++ apache-tomcat-6.0.20-src-modified/java/org/apache/naming/ServiceRef.java	2018-06-21 22:19:28.004019000 -0300
@@ -18,8 +18,11 @@
 
 package org.apache.naming;
 
+import java.util.Collections;
 import java.util.Enumeration;
 import java.util.Vector;
+import java.util.List;
+import java.util.LinkedList;
 
 import javax.naming.Context;
 import javax.naming.RefAddr;
@@ -86,7 +89,7 @@
     /**
      * The vector to save the handler Reference objects, because they can't be saved in the addrs vector.
      */
-    private Vector<HandlerRef> handlers = new Vector<HandlerRef>();
+    private List<HandlerRef> handlers = Collections.synchronizedList(new LinkedList<HandlerRef>());
 
 
     // ----------------------------------------------------------- Constructors
